@model crickinfo_mvc_ef_core.ViewModels.MatchUpdateViewModel

@{
    ViewData["Title"] = "CricInfo - Matches";
}


<div class="mb-5 mt-5 container-fluid d-flex justify-content-center align-items-center">
    <div class="card p-5 shadow-lg" style="max-width: 500px; width: 100%;">

        <form asp-action="Update">
            <h1 class="text-center mb-4" style="font-size: 2rem;">Update</h1>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="MatchId" type="hidden" value="@Model.MatchId" />

            <div class="form-group">
    <label asp-for="MatchDate" class="form-label d-block mt-2" style="font-size: 1.25rem;"></label>
    <input asp-for="MatchDate" class="form-control form-control-lg" type="date" value="@Model.MatchDate.ToString("yyyy-MM-dd")" />
    <span asp-validation-for="MatchDate" class="text-danger small" style="font-size: 1rem;"></span>
</div>

<div class="form-group">
    <label class="form-label d-block mt-3" style="font-size: 1.25rem;">Select Teams (Pick two)</label>
    <div class="row">
        @if (Model.teamslist?.Count > 0)
        {
            @foreach (var team in Model.teamslist)
            {
                <div class="col-md-6 mb-2">
                    <div class="form-check">
                        <input class="form-check-input team-checkbox" type="checkbox" name="selectedTeamIds" value="@team.TeamId" 
                               id="@team.TeamId" 
                               @(Model.TeamA == team.TeamId || Model.TeamB == team.TeamId ? "checked" : "") />
                        <label class="form-check-label" for="@team.TeamId">@team.Name</label>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No teams available. Please add teams first.</p>
        }
    </div>
</div>

            <div class="form-group">
                <label asp-for="Result" class="form-label d-block mt-3" style="font-size: 1.25rem;">Winner</label>
                <select asp-for="Result" id="resultDropdown" class="form-control form-control-lg">
                    <option value="">Select Winner</option>
                    <option value="Pending" selected="@((Model.Result == "Pending") ? true : false)">Pending</option>
                    <option value="@Model.TeamA" selected="@((Model.Result == Model.TeamA.ToString()) ? true : false)">
                        @Model.teamslist.FirstOrDefault(t => t.TeamId == Model.TeamA)?.Name
                    </option>
                    <option value="@Model.TeamB" selected="@((Model.Result == Model.TeamB.ToString()) ? true : false)">
                        @Model.teamslist.FirstOrDefault(t => t.TeamId == Model.TeamB)?.Name
                    </option>
                </select>
                <span asp-validation-for="Result" class="text-danger small" style="font-size: 1rem;"></span>
            </div>




            <div class="d-flex justify-content-center">
                <button type="submit" class="btn btn-primary" style="width: 50%;">Update</button>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Get all team checkboxes
            const checkboxes = document.querySelectorAll('.team-checkbox');
            const resultDropdown = document.getElementById('resultDropdown');

            // Event listener for checkbox changes
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateDropdown);
            });

            function updateDropdown() {
                // Get selected teams
                const selectedTeams = [];
                checkboxes.forEach(checkbox => {
                    if (checkbox.checked) {
                        selectedTeams.push({
                            id: checkbox.value,
                            name: checkbox.nextElementSibling.innerText
                        });
                    }
                });

                // If more than 2 teams are selected, deselect the latest one
                if (selectedTeams.length > 2) {
                    this.checked = false;
                    return;
                }

                // Clear existing options in the dropdown
                resultDropdown.innerHTML = '<option value="">Select Winner</option><option value="Pending">Pending</option>';

                // Add selected teams to the dropdown
                selectedTeams.forEach(team => {
                    const option = document.createElement('option');
                    option.value = team.id;
                    option.text = team.name;
                    resultDropdown.appendChild(option);
                });
            }
        });
    </script>

}